<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c480c090-ebfa-40c8-8136-5f2b3363f53f" name="Default Changelist" comment="Buildings System Implemented successfully.&#10;&#10;Players are having now a winning objetcive(a set of need to complete buildings), that the Game class will decide.&#10;&#10;For each objective building in that set, the players will try to build it by fulfilling their build requirements. The aproach is top-down as it follows: every building may have another already owned building requirements or resources cost requirements. If players do fulfill both of theese requirements, the player will build that building in his neighbourhood(if free), or if the neighbourhood is already occupied, the player will randomly teleport in another free-neighbour-spot to build the building. If the player does not fulfill the requirements, he will divide and conquer the requirements and call the build method for every building in those requirements, or if the player needs resources, the player will start searching and exploiting for what is needed. If the map reaches starvation (resources not available anymore, the player stops and leaves the battlefield).&#10;&#10;Every building may also implement the Producer interface, meaning they may have their own separate threads that will produce different types of resources, once upon a build-in cooldown.&#10;&#10;The resources they produce are established by a set of ProductionHandlers, which are implementations of a visitor interfaces hierarchy. So, based on the concrete type of Producer that tries to request production from the ProductionHandler, this one from end will call the right production method, setting the types and amount of the resources that the concrete Producer will produce (as said earlier, once upon a specific cooldown).&#10;&#10;The updates into the player's resourceBar are thread-safe, of course, thanks to the synchronization in the player/resoucreValueWrapper classes.&#10;&#10;Future updates coming in setting theese specific ProductionHandlers, for every producer.">
      <change afterPath="$PROJECT_DIR$/art/buildings hierarchy.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/blue.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/brown.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/cyan.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/green.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/orange.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/purple.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/red.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/lumbercamp/yellow.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/blue.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/brown.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/cyan.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/green.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/orange.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/purple.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/red.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/townhall/yellow.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/blue.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/brown.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/cyan.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/green.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/orange.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/purple.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/red.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/tradecenter/yellow.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/blue.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/brown.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/cyan.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/green.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/orange.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/purple.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/red.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/res/img/icon/building/watchtower/yellow.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/Factory/BuildingFactory.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Barracks.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/BuildRequirements.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Castle.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Church.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Granary.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Hospital.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/House.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/LumberCamp.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Mansion.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Mill.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Mine.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Mosque.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Observatory.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Parliament.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Smithery.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Sphinx.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Stable.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Temple.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/TownHall.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/TradeCenter.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/University.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/WatchTower.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/LumberCampPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/css/game.css" beforeDir="false" afterPath="$PROJECT_DIR$/res/css/game.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/blue.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/brown.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/cyan.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/green.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/orange.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/purple.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/red.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/town hall/yellow.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/blue.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/brown.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/cyan.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/green.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/orange.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/purple.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/red.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/trade center/yellow.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/blue.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/brown.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/cyan.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/green.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/orange.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/purple.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/red.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/res/img/icon/building/watch tower/yellow.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/CustomFX/ZoomableScrollPane.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/CustomFX/ZoomableScrollPane.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_ImageView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_ImageView.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_TextArea.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_TextArea.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_TextField.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_TextField.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_TextFlow.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/Events/Capturers/Capturer_TextFlow.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/GameUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/GameUI.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GUI/ImageLoader.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GUI/ImageLoader.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameEngine.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameEngine.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/Exceptions/ResourceBankExtinctionException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/Exceptions/ResourceBankExtinctionException.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/Factory/ResourceFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/Factory/ResourceFactory.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/Game.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapBuilder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapBuilder.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Building.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Building.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Colosseum.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Buildings/Colosseum.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/Producer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/Producer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/BarracksPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/BarracksPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/CastlePH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/CastlePH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ChurchPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ChurchPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ColosseumPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ColosseumPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/GoldResourceBankPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/GoldResourceBankPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/GranaryPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/GranaryPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/HospitalPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/HospitalPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/HousePH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/HousePH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MansionPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MansionPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MillPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MillPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MinePH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MinePH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MosquePH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/MosquePH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ObservatoryPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ObservatoryPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ParliamentPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/ParliamentPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/SmitheryPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/SmitheryPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/SphinxPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/SphinxPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/StablePH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/StablePH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/TemplePH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/TemplePH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/TownHallPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/TownHallPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/TradeCenterPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/TradeCenterPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/UniversityPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/UniversityPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/WatchTowerPH.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Interfaces/ProductionHandlers/WatchTowerPH.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/MapEntity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/MapEntity.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Player.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/FoodResourceBank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/FoodResourceBank.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/GoldResourceBank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/GoldResourceBank.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/IronResourceBank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/IronResourceBank.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/ResourceBank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/ResourceBank.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/StoneResourceBank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/StoneResourceBank.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/WoodResourceBank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/MapLogic/MapEntities/Resources/WoodResourceBank.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/GameLogic/Messaging/MessageLog.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/GameLogic/Messaging/MessageLog.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/PixelWars/HelloWorld.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PixelWars/HelloWorld.java" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="newUI" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1T4CuGhruY5exwong1wnzV9rSVK" />
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/com/case_pcbe/strategy_game/GUI" />
    <property name="node.js.detected.package.stylelint" value="true" />
    <property name="node.js.path.for.package.stylelint" value="project" />
    <property name="node.js.selected.package.stylelint" value="" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="restartRequiresConfirmation" value="false" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="stylesheet.code.style.group" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\abesg\IdeaProjects\PIXEL Wars GIT\src\com\case_pcbe\strategy_game\GUI" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.GameEngine (1)">
    <configuration name="GameEngine (1)" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="PixelWars.GameEngine" />
      <module name="PIXEL Wars GIT" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="PixelWars.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HelloWorld" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="PixelWars.HelloWorld" />
      <module name="PIXEL Wars GIT" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="PixelWars.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Map" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="PixelWars.GameLogic.MapLogic.Map" />
      <module name="PIXEL Wars GIT" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="PixelWars.GameLogic.MapLogic.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="What" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="What" />
      <module name="PIXEL Wars GIT" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ZoomableScrollPane" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="PixelWars.GUI.CustomFX.ZoomableScrollPane" />
      <module name="PIXEL Wars GIT" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="PixelWars.GUI.CustomFX.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.GameEngine (1)" />
        <item itemvalue="Application.HelloWorld" />
        <item itemvalue="Application.Map" />
        <item itemvalue="Application.ZoomableScrollPane" />
        <item itemvalue="Application.What" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c480c090-ebfa-40c8-8136-5f2b3363f53f" name="Default Changelist" comment="" />
      <created>1572710201073</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1572710201073</updated>
      <workItem from="1572710202241" duration="2629000" />
      <workItem from="1572786990615" duration="23465000" />
      <workItem from="1572892071402" duration="12899000" />
      <workItem from="1572907643916" duration="41000" />
      <workItem from="1572955576170" duration="5000" />
      <workItem from="1572958557868" duration="525000" />
      <workItem from="1572979174573" duration="19119000" />
      <workItem from="1573003846508" duration="3657000" />
      <workItem from="1573007713757" duration="167000" />
      <workItem from="1573036052105" duration="14629000" />
      <workItem from="1573057663683" duration="29825000" />
      <workItem from="1573132029958" duration="10351000" />
      <workItem from="1573170732097" duration="15773000" />
      <workItem from="1573215994698" duration="75233000" />
      <workItem from="1573474704172" duration="33014000" />
      <workItem from="1573523582798" duration="113000" />
      <workItem from="1573568979808" duration="144000" />
      <workItem from="1573580869705" duration="3455000" />
      <workItem from="1573587135029" duration="15837000" />
      <workItem from="1573649717918" duration="8585000" />
      <workItem from="1573676904551" duration="19989000" />
      <workItem from="1573730765808" duration="21058000" />
      <workItem from="1573766692000" duration="18957000" />
      <workItem from="1573827006916" duration="56628000" />
      <workItem from="1574018038870" duration="51700000" />
      <workItem from="1574166333761" duration="593000" />
      <workItem from="1574167044238" duration="2410000" />
      <workItem from="1574204283533" duration="241000" />
      <workItem from="1574208899739" duration="629000" />
      <workItem from="1574256411580" duration="4298000" />
      <workItem from="1574278054938" duration="62872000" />
      <workItem from="1574388437179" duration="17468000" />
      <workItem from="1574435069390" duration="9602000" />
      <workItem from="1574451408869" duration="60109000" />
      <workItem from="1574602735617" duration="25292000" />
    </task>
    <task id="LOCAL-00001" summary="1. Added Basic GameUI:&#10;One scene for the initial game configuration form&#10;One scene for the in game (player bars, map, global chat log)&#10;&#10;2. Added Procedural Map Generation logic based on PerlinNoise algorithm">
      <created>1572711273038</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1572711273038</updated>
    </task>
    <task id="LOCAL-00002" summary="1. Added Basic GameUI:&#10;One scene for the initial game configuration form&#10;One scene for the in game (player bars, map, global chat log)&#10;&#10;2. Added Procedural Map Generation logic based on PerlinNoise algorithm">
      <created>1572711856522</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1572711856522</updated>
    </task>
    <task id="LOCAL-00003" summary="1. Removed the excess of static context&#10;2. GameUI class now uses the generic methods &quot;setupElement&quot; in order to position specific Node Elements/set sizes for specific Region elements&#10;3. A lot of code refactoring">
      <created>1572907331102</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1572907331102</updated>
    </task>
    <task id="LOCAL-00004" summary="1. Removed the excess of static context&#10;2. GameUI class now uses the generic methods &quot;setupElement&quot; in order to position specific Node Elements/set sizes for specific Region elements&#10;3. A lot of code refactoring">
      <created>1572907666062</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1572907666062</updated>
    </task>
    <task id="LOCAL-00005" summary="More UI &amp; Map Logic changes&#10;&#10;1. The map drawing inside it's layout should had not a FIXED size in pixels, it was depending on the dimension of the noiseMatrix resulted from the Map Pane's width/height (in pixels) divided into the variable tileSize selected before. Considering the old resolution for map was: 1280*900, for example, 3 does not divide 1280 or 7 does not divide 900! We would like to keep the tileSizes in pixels like that.&#10;Solution: Map Pane's (in pixels) should be choosen in such way that it will be able to be EXACTLY divided by each of the tileSizes in pixels: 3,4,5,6,7 (depending on the map type selected before). So we are doing the least common multiple of (3,4,5,6,7)=420 -&gt; a close resolution of 1260*840(3:2 aspect ratio) for the Map Pane should work fine for the 1600x900 window size we test on. Soon we will have a responsive update for &gt;=720p monitors.&#10;Why? Doing so we'll have noiseMatrix's width=1260/tileSize and height=840/tileSize (both INTEGER numbers, better than doubles). Why? An unexact division with the tileSizes would result in a double width and height, that must be converted into int in order to be the number of columns/rows in the matrixes. Conversion Double to Int would result in precision loss and different sizes for the mapPane's when drawn.&#10;Bad example, tilesize=7: 1280/7=182.8571428571429 -&gt; converted to 182 and 900/7 -&gt; 128.5714285714286 converted to 128&#10;now multiplying those by the tile drawing size we have 182*7=1274 and 128*7=896 a totally different resolutions than the one we chose!&#10;&#10;2. Few Changes to the UI: added more containers for easy alignment. Following commit will be more focused on this part.">
      <created>1573007722561</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1573007722561</updated>
    </task>
    <task id="LOCAL-00006" summary="New introUI &amp; graphics using CSS&#10;&#10;The introUI was totally remaked using layouts. The structure is done via Java Code, while the graphics is now styled with an external css.&#10;This allows separation of the UI structure/graphics, but also permits flexibility for the game's graphics, as long as it fits to the structure in the java code.">
      <created>1573254627234</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1573254627234</updated>
    </task>
    <task id="LOCAL-00007" summary="New introUI &amp; graphics using CSS&#10;&#10;The introUI was totally remaked using layouts. The structure is done via Java Code, while the graphics is now styled with an external css.&#10;This allows separation of the UI structure/graphics, but also permits flexibility for the game's graphics, as long as it fits to the structure in the java code.">
      <created>1573321053641</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1573321053641</updated>
    </task>
    <task id="LOCAL-00008" summary="Added out folder for .class files and res folder for the resources">
      <created>1573321076960</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1573321076960</updated>
    </task>
    <task id="LOCAL-00009" summary="Code refactoring, CSS and Player Icons&#10;&#10;-A lot of code refactoring all over the classes;&#10;-The graphics are based mainly on css now and on the res folder;&#10;-Players may choose now their icons;&#10;-Different map tiles size: 6, 8, 10, 12, in order for the icons to fit there fine. 3,4,5,6,7 had a stupid common multiple of 420, but 6,8,10,12 have 120 in common. everything is more flexible now considering map size!&#10;new map size: 1680 x 840">
      <created>1573523287202</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1573523287202</updated>
    </task>
    <task id="LOCAL-00010" summary="Code refactoring, CSS and Player Icons&#10;&#10;-A lot of code refactoring all over the classes;&#10;-The graphics are based mainly on css now and on the res folder;&#10;-Players may choose now their icons;&#10;-Different map tiles size: 6, 8, 10, 12, in order for the icons to fit there fine. 3,4,5,6,7 had a stupid common multiple of 420, but 6,8,10,12 have 120 in common. everything is more flexible now considering map size!&#10;new map size: 1680 x 840">
      <created>1573523588766</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1573523588766</updated>
    </task>
    <task id="LOCAL-00011" summary="Code refactoring, CSS and Player Icons&#10;&#10;-A lot of code refactoring all over the classes;&#10;-The graphics are based mainly on css now and on the res folder;&#10;-Players may choose now their icons;&#10;-Different map tiles size: 6, 8, 10, 12, in order for the icons to fit there fine. 3,4,5,6,7 had a stupid common multiple of 420, but 6,8,10,12 have 120 in common. everything is more flexible now considering map size!&#10;new map size: 1680 x 840">
      <created>1573523683980</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1573523683980</updated>
    </task>
    <task id="LOCAL-00012" summary="Unnamed">
      <created>1573602180434</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1573602180434</updated>
    </task>
    <task id="LOCAL-00013" summary="Added ImageLoader class, used for processing the Icons for the MapEtities in the UI">
      <created>1573685698704</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1573685698704</updated>
    </task>
    <task id="LOCAL-00014" summary="Updates to the InGameUI&#10;&#10;-InGame interface now looks nice.&#10;-Added RESET button, that will take the user back to the intro scene and reconfigure the game settings.">
      <created>1573700141044</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1573700141044</updated>
    </task>
    <task id="LOCAL-00015" summary="Updates to Map&#10;&#10;-Map in the inGameUI is now Zoomable, Pannable.&#10;-Further performance optimizations for Large/Giant maps coming soon">
      <created>1573751936534</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1573751936534</updated>
    </task>
    <task id="LOCAL-00016" summary="Observer pattern &amp; Threading features&#10;-Added event broadcasters &amp; captures via observer pattern. Their role is to offer SYNCHRONIZED updates to the ingameUI considering the on-the-fly state of the game object; Further events broadcasters/capturers coming soon.&#10;-Threading for loading the UI faster. &#10;-Players now implement runnable and will have soon their infinite loop ongoing in their run()&#10;-Hitting BEGIN button will trigger the Game begin() method, that will spawn the players and start their threads">
      <created>1573964799268</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1573964799268</updated>
    </task>
    <task id="LOCAL-00017" summary="player move now">
      <created>1574258150462</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1574258150462</updated>
    </task>
    <task id="LOCAL-00018" summary="player move now">
      <created>1574258456409</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1574258456409</updated>
    </task>
    <task id="LOCAL-00019" summary="bla bla">
      <created>1574259281974</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1574259281974</updated>
    </task>
    <task id="LOCAL-00020" summary="bla bla">
      <created>1574259548483</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1574259548483</updated>
    </task>
    <task id="LOCAL-00021" summary="bla bla">
      <created>1574451530342</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1574451530342</updated>
    </task>
    <task id="LOCAL-00022" summary="Players resources exploatation is now thread safe&#10;&#10;Explaination:&#10;-firsly, the players are going to search for a specific random type of resource calling the searchResource(resourceName) method;&#10;-the search is based on a breadth-first search on the map's matrix;&#10;-if they find a solution (a mapentity that is a resource on operational terrain and isn't busy at the moment/doesn't already have 4 players that exploit it), they are moving to it (by teleporting there now, will travel step by step in a path later, but now, to demonstrate the thread-safety, they will teleport).&#10;-after moving to the resource found, they are trying to exploit it, after checking it wasn't already EXPLOITED (not on the map anymore);&#10;-if a resource is exploited and reaches 0 durability, the player thread that consumes it will remove it from the map;&#10;-finally, if no resource of the name resoucreName is found, the players will set locally in a hashmap that the map doesnt have that type of resource anymore. If the map contains not even a single type of resource, the randomization of the resourceName to search can't be completed anymore, so the player thread will be notified to stop (players will leave the land as it reached a desolate state);&#10;&#10;Things that occur:&#10;-thread safety achieved via syncrhonization over the MapTiles reading/writing entities, and also via syncrhonization over the resources exploit method;&#10;-players won't try to collect a resource that reached 0 hp in a previous exploatation (as it's removed from the map);&#10;-players won't try to collect a resource that is busy now (4 players already exploiting it);&#10;&#10;Other things happening this commit:&#10;-The global MessageLog has now a TextFlow capturer object reflecting colors of the GlobalSpeakers that chat there.&#10;-When a global speaker chats via the messaging system, the last message is going to be appended to the globallog, formated in a specific way of the global speaker (for example players and objectives text will have the text written in their color/owner colors);&#10;-The global MessageLog is thread-safe (via synrchonization), of course, as more threads are trying to write data (messages) in there.">
      <created>1574532388441</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1574532388441</updated>
    </task>
    <option name="localTasksCounter" value="23" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="1. Added Basic GameUI:&#10;One scene for the initial game configuration form&#10;One scene for the in game (player bars, map, global chat log)&#10;&#10;2. Added Procedural Map Generation logic based on PerlinNoise algorithm" />
    <MESSAGE value="1. Added Basic GameUI:&#10;One scene for the initial game configuration form&#10;One scene for the in game (player bars, map, global chat log)&#10;&#10;2. Added Procedural Map Generation logic based on PerlinNoise algorithm&#10;..." />
    <MESSAGE value="1. Removed the excess of static context&#10;2. GameUI class now uses the generic methods &quot;setupElement&quot; in order to position specific Node Elements/set sizes for specific Region elements&#10;3. A lot of code refactoring" />
    <MESSAGE value="More UI &amp; Map Logic changes&#10;&#10;1. The map drawing inside it's layout should had not a FIXED size in pixels, it was depending on the dimension of the noiseMatrix resulted from the Map Pane's width/height (in pixels) divided into the variable tileSize selected before. Considering the old resolution for map was: 1280*900, for example, 3 does not divide 1280 or 7 does not divide 900! We would like to keep the tileSizes in pixels like that.&#10;Solution: Map Pane's (in pixels) should be choosen in such way that it will be able to be EXACTLY divided by each of the tileSizes in pixels: 3,4,5,6,7 (depending on the map type selected before). So we are doing the least common multiple of (3,4,5,6,7)=420 -&gt; a close resolution of 1260*840(3:2 aspect ratio) for the Map Pane should work fine for the 1600x900 window size we test on. Soon we will have a responsive update for &gt;=720p monitors.&#10;Why? Doing so we'll have noiseMatrix's width=1260/tileSize and height=840/tileSize (both INTEGER numbers, better than doubles). Why? An unexact division with the tileSizes would result in a double width and height, that must be converted into int in order to be the number of columns/rows in the matrixes. Conversion Double to Int would result in precision loss and different sizes for the mapPane's when drawn.&#10;Bad example, tilesize=7: 1280/7=182.8571428571429 -&gt; converted to 182 and 900/7 -&gt; 128.5714285714286 converted to 128&#10;now multiplying those by the tile drawing size we have 182*7=1274 and 128*7=896 a totally different resolutions than the one we chose!&#10;&#10;2. Few Changes to the UI: added more containers for easy alignment. Following commit will be more focused on this part." />
    <MESSAGE value="New introUI &amp; graphics using CSS&#10;&#10;The introUI was totally remaked using layouts. The structure is done via Java Code, while the graphics is now styled with an external css.&#10;This allows separation of the UI structure/graphics, but also permits flexibility for the game's graphics, as long as it fits to the structure in the java code." />
    <MESSAGE value="Added out folder for .class files and res folder for the resources" />
    <MESSAGE value="Code refactoring, CSS and Player Icons&#10;&#10;-A lot of code refactoring all over the classes;&#10;-The graphics are based mainly on css now and on the res folder;&#10;-Players may choose now their icons;&#10;-Different map tiles size: 6, 8, 10, 12, in order for the icons to fit there fine. 3,4,5,6,7 had a stupid common multiple of 420, but 6,8,10,12 have 120 in common. everything is more flexible now considering map size!&#10;new map size: 1680 x 840" />
    <MESSAGE value="Unnamed" />
    <MESSAGE value="Added ImageLoader class, used for processing the Icons for the MapEtities in the UI" />
    <MESSAGE value="Updates to the InGameUI&#10;&#10;-InGame interface now looks nice.&#10;-Added RESET button, that will take the user back to the intro scene and reconfigure the game settings." />
    <MESSAGE value="Updates to Map&#10;&#10;-Map in the inGameUI is now Zoomable, Pannable.&#10;-Further performance optimizations for Large/Giant maps coming soon" />
    <MESSAGE value="Observer pattern &amp; Threading features&#10;-Added event broadcasters &amp; captures via observer pattern. Their role is to offer SYNCHRONIZED updates to the ingameUI considering the on-the-fly state of the game object; Further events broadcasters/capturers coming soon.&#10;-Threading for loading the UI faster. &#10;-Players now implement runnable and will have soon their infinite loop ongoing in their run()&#10;-Hitting BEGIN button will trigger the Game begin() method, that will spawn the players and start their threads" />
    <MESSAGE value="player move now" />
    <MESSAGE value="bla bla" />
    <MESSAGE value="Players resources exploatation is now thread safe&#10;&#10;Explaination:&#10;-firsly, the players are going to search for a specific random type of resource calling the searchResource(resourceName) method;&#10;-the search is based on a breadth-first search on the map's matrix;&#10;-if they find a solution (a mapentity that is a resource on operational terrain and isn't busy at the moment/doesn't already have 4 players that exploit it), they are moving to it (by teleporting there now, will travel step by step in a path later, but now, to demonstrate the thread-safety, they will teleport).&#10;-after moving to the resource found, they are trying to exploit it, after checking it wasn't already EXPLOITED (not on the map anymore);&#10;-if a resource is exploited and reaches 0 durability, the player thread that consumes it will remove it from the map;&#10;-finally, if no resource of the name resoucreName is found, the players will set locally in a hashmap that the map doesnt have that type of resource anymore. If the map contains not even a single type of resource, the randomization of the resourceName to search can't be completed anymore, so the player thread will be notified to stop (players will leave the land as it reached a desolate state);&#10;&#10;Things that occur:&#10;-thread safety achieved via syncrhonization over the MapTiles reading/writing entities, and also via syncrhonization over the resources exploit method;&#10;-players won't try to collect a resource that reached 0 hp in a previous exploatation (as it's removed from the map);&#10;-players won't try to collect a resource that is busy now (4 players already exploiting it);&#10;&#10;Other things happening this commit:&#10;-The global MessageLog has now a TextFlow capturer object reflecting colors of the GlobalSpeakers that chat there.&#10;-When a global speaker chats via the messaging system, the last message is going to be appended to the globallog, formated in a specific way of the global speaker (for example players and objectives text will have the text written in their color/owner colors);&#10;-The global MessageLog is thread-safe (via synrchonization), of course, as more threads are trying to write data (messages) in there." />
    <MESSAGE value="Buildings System Implemented successfully.&#10;&#10;Players are having now a winning objetcive(a set of need to complete buildings), that the Game class will decide.&#10;&#10;For each objective building in that set, the players will try to build it by fulfilling their build requirements. The aproach is top-down as it follows: every building may have another already owned building requirements or resources cost requirements. If players do fulfill both of theese requirements, the player will build that building in his neighbourhood(if free), or if the neighbourhood is already occupied, the player will randomly teleport in another free-neighbour-spot to build the building. If the player does not fulfill the requirements, he will divide and conquer the requirements and call the build method for every building in those requirements, or if the player needs resources, the player will start searching and exploiting for what is needed. If the map reaches starvation (resources not available anymore, the player stops and leaves the battlefield).&#10;&#10;Every building may also implement the Producer interface, meaning they may have their own separate threads that will produce different types of resources, once upon a build-in cooldown.&#10;&#10;The resources they produce are established by a set of ProductionHandlers, which are implementations of a visitor interfaces hierarchy. So, based on the concrete type of Producer that tries to request production from the ProductionHandler, this one from end will call the right production method, setting the types and amount of the resources that the concrete Producer will produce (as said earlier, once upon a specific cooldown).&#10;&#10;The updates into the player's resourceBar are thread-safe, of course, thanks to the synchronization in the player/resoucreValueWrapper classes.&#10;&#10;Future updates coming in setting theese specific ProductionHandlers, for every producer." />
    <option name="LAST_COMMIT_MESSAGE" value="Buildings System Implemented successfully.&#10;&#10;Players are having now a winning objetcive(a set of need to complete buildings), that the Game class will decide.&#10;&#10;For each objective building in that set, the players will try to build it by fulfilling their build requirements. The aproach is top-down as it follows: every building may have another already owned building requirements or resources cost requirements. If players do fulfill both of theese requirements, the player will build that building in his neighbourhood(if free), or if the neighbourhood is already occupied, the player will randomly teleport in another free-neighbour-spot to build the building. If the player does not fulfill the requirements, he will divide and conquer the requirements and call the build method for every building in those requirements, or if the player needs resources, the player will start searching and exploiting for what is needed. If the map reaches starvation (resources not available anymore, the player stops and leaves the battlefield).&#10;&#10;Every building may also implement the Producer interface, meaning they may have their own separate threads that will produce different types of resources, once upon a build-in cooldown.&#10;&#10;The resources they produce are established by a set of ProductionHandlers, which are implementations of a visitor interfaces hierarchy. So, based on the concrete type of Producer that tries to request production from the ProductionHandler, this one from end will call the right production method, setting the types and amount of the resources that the concrete Producer will produce (as said earlier, once upon a specific cooldown).&#10;&#10;The updates into the player's resourceBar are thread-safe, of course, thanks to the synchronization in the player/resoucreValueWrapper classes.&#10;&#10;Future updates coming in setting theese specific ProductionHandlers, for every producer." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/PIXEL_Wars_GIT$GameEngine__1_.ic" NAME="GameEngine (1) Coverage Results" MODIFIED="1574395187653" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>PixelWars.*</FILTER>
    </SUITE>
    <SUITE FILE_PATH="coverage/PIXEL_Wars_GIT$GameEngine.ic" NAME="GameEngine Coverage Results" MODIFIED="1573048401600" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>com.case_pcbe.strategy_game.GUI.*</FILTER>
    </SUITE>
  </component>
</project>